{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bismu\\\\WEB PROGRAMMING HTML\\\\CW06\\\\my-app\\\\src\\\\FilteredList.jsx\";\nimport React, { Component } from 'react';\nimport { DropdownButton, MenuItem } from 'react-bootstrap';\nimport List from './List';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass FilteredList extends Component {\n  constructor(props) {\n    super(props);\n\n    //The state is just a list of key/value pairs (like a hashmap)\n    //TODO (FilteredList): Add an additional state variable within this.state called \"type\" and set it to a default value\n    //Sets the state whenever the user types on the search bar\n    this.onSearch = event => {\n      this.setState({\n        search: event.target.value.trim().toLowerCase()\n      });\n    };\n    //TODO (FilteredList): Set the state of the \"type\" state variable depending on what is passed in\n    this.onFilter = event => {};\n    //TODO (FilteredList): Change filterItem to take into account the \"type\" state variable when filtering\n    this.filterItem = item => {\n      return item.name.toLowerCase().search(this.state.search) !== -1;\n    };\n    this.state = {\n      search: \"\"\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-list\",\n      children: [\"/*TODO (FilteredList): Create a Dropdown Menu with three different menu options: Fruit, Vegetables, and All*/\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search\",\n        onChange: this.onSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        items: this.props.items.filter(this.filterItem)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this);\n  }\n}\nexport default FilteredList;","map":{"version":3,"names":["React","Component","DropdownButton","MenuItem","List","jsxDEV","_jsxDEV","FilteredList","constructor","props","onSearch","event","setState","search","target","value","trim","toLowerCase","onFilter","filterItem","item","name","state","render","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","items","filter"],"sources":["C:/Users/bismu/WEB PROGRAMMING HTML/CW06/my-app/src/FilteredList.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { DropdownButton, MenuItem } from 'react-bootstrap';\nimport List from './List';\n\nclass FilteredList extends Component {\n  constructor(props) {\n    super(props);\n\n    //The state is just a list of key/value pairs (like a hashmap)\n    //TODO (FilteredList): Add an additional state variable within this.state called \"type\" and set it to a default value\n    this.state = {\n      search: \"\"\n    };\n  }\n\n  //Sets the state whenever the user types on the search bar\n  onSearch = (event) => {\n    this.setState({search: event.target.value.trim().toLowerCase()});\n  }\n\n  //TODO (FilteredList): Set the state of the \"type\" state variable depending on what is passed in\n  onFilter = (event) => {\n\n  }\n\n  //TODO (FilteredList): Change filterItem to take into account the \"type\" state variable when filtering\n  filterItem = (item) => {\n      return item.name.toLowerCase().search(this.state.search) !== -1;\n  }\n\n  render(){\n    return (\n        <div className = \"filter-list\">\n         \n          /*TODO (FilteredList): Create a Dropdown Menu with three different menu options: Fruit, Vegetables, and All*/\n          \n          <input type = \"text\" placeholder = \"Search\" onChange = {this.onSearch} />\n          <List items = {this.props.items.filter(this.filterItem)} />\n        </div>\n    );\n  }\n}\n\nexport default FilteredList;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,cAAc,EAAEC,QAAQ,QAAQ,iBAAiB;AAC1D,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,SAASN,SAAS,CAAC;EACnCO,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;;IAEZ;IACA;IAMF;IAAA,KACAC,QAAQ,GAAIC,KAAK,IAAK;MACpB,IAAI,CAACC,QAAQ,CAAC;QAACC,MAAM,EAAEF,KAAK,CAACG,MAAM,CAACC,KAAK,CAACC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MAAC,CAAC,CAAC;IAClE,CAAC;IAED;IAAA,KACAC,QAAQ,GAAIP,KAAK,IAAK,CAEtB,CAAC;IAED;IAAA,KACAQ,UAAU,GAAIC,IAAI,IAAK;MACnB,OAAOA,IAAI,CAACC,IAAI,CAACJ,WAAW,CAAC,CAAC,CAACJ,MAAM,CAAC,IAAI,CAACS,KAAK,CAACT,MAAM,CAAC,KAAK,CAAC,CAAC;IACnE,CAAC;IAlBC,IAAI,CAACS,KAAK,GAAG;MACXT,MAAM,EAAE;IACV,CAAC;EACH;EAiBAU,MAAMA,CAAA,EAAE;IACN,oBACIjB,OAAA;MAAKkB,SAAS,EAAG,aAAa;MAAAC,QAAA,GAAC,+GAI7B,eAAAnB,OAAA;QAAOoB,IAAI,EAAG,MAAM;QAACC,WAAW,EAAG,QAAQ;QAACC,QAAQ,EAAI,IAAI,CAAClB;MAAS;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzE1B,OAAA,CAACF,IAAI;QAAC6B,KAAK,EAAI,IAAI,CAACxB,KAAK,CAACwB,KAAK,CAACC,MAAM,CAAC,IAAI,CAACf,UAAU;MAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD,CAAC;EAEZ;AACF;AAEA,eAAezB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}