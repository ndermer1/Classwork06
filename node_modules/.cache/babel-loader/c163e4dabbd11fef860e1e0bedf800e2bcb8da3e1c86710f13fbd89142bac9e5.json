{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bismu\\\\WEB PROGRAMMING HTML\\\\CW06\\\\my-app\\\\src\\\\Counter.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n    this.incrementCount = () => {\n      /* TODO (Counter): Use setState() to modify the count. Here’s an example:\n          this.setState({\n              keyToChange: valueToChangeTo\n          });\n      */\n    };\n    this.state = {\n      count: 5\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counter\",\n      children: [\"/*TODO (Counter): display the value of count*/\", /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.state.count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), \"/*TODO (Counter): add a button that calls incrementCount() when clicked*/\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.incrementCount,\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Counter;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","Counter","constructor","props","incrementCount","state","count","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["C:/Users/bismu/WEB PROGRAMMING HTML/CW06/my-app/src/Counter.jsx"],"sourcesContent":["import React, { Component } from 'react';\n\nclass Counter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            count: 5\n        };\n    }\n\n    incrementCount = () => {\n        /* TODO (Counter): Use setState() to modify the count. Here’s an example:\n            this.setState({\n                keyToChange: valueToChangeTo\n            });\n        */\n    }\n  \n    render() {\n        return (\n            <div className=\"counter\">\n                /*TODO (Counter): display the value of count*/\n                <h1>{this.state.count}</h1>\n\n                /*TODO (Counter): add a button that calls incrementCount() when clicked*/\n                <button onClick={this.incrementCount}>Increment</button>\n            </div>\n        );\n    }\n}\n\nexport default Counter;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,OAAO,SAASH,SAAS,CAAC;EAC5BI,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAAC,KAOjBC,cAAc,GAAG,MAAM;MACnB;AACR;AACA;AACA;AACA;IAJQ,CAKH;IAXG,IAAI,CAACC,KAAK,GAAG;MACTC,KAAK,EAAE;IACX,CAAC;EACL;EAUAC,MAAMA,CAAA,EAAG;IACL,oBACIP,OAAA;MAAKQ,SAAS,EAAC,SAAS;MAAAC,QAAA,GAAC,gDAErB,eAAAT,OAAA;QAAAS,QAAA,EAAK,IAAI,CAACJ,KAAK,CAACC;MAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,6EAG3B,eAAAb,OAAA;QAAQc,OAAO,EAAE,IAAI,CAACV,cAAe;QAAAK,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC;EAEd;AACJ;AAEA,eAAeZ,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}