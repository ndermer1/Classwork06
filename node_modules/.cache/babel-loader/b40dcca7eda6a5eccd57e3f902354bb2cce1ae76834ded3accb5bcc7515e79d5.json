{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bismu\\\\WEB PROGRAMMING HTML\\\\CW06\\\\my-app\\\\src\\\\FilteredList.jsx\";\n// import React, { Component } from 'react';\n// import {DropdownButton, MenuItem} from 'react-bootstrap';\n// import List from './List';\n\n// class FilteredList extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     //The state is just a list of key/value pairs (like a hashmap)\n//     //TODO (FilteredList): Add an additional state variable within this.state called \"type\" and set it to a default value\n//     this.state = {\n//       search: \"\",\n//       type: \"all\"\n//     };\n//   }\n\n//   //Sets the state whenever the user types on the search bar\n//   onSearch = (event) => {\n//     this.setState({search: event.target.value.trim().toLowerCase()});\n//   }\n\n//   // //TODO (FilteredList): Set the state of the \"type\" state variable depending on what is passed in\n//   // onFilter = (type) => {\n//   //   this.setState({ type });\n//   // }\n//   handleSelect = (eventKey, event) => {\n//     this.setState({ type: eventKey });\n//   }\n\n//   //TODO (FilteredList): Change filterItem to take into account the \"type\" state variable when filtering\n//   filterItem = (item) => {\n//       // if (this.state.type !== \"all\" && item.type.toLowerCase() !== this.state.type) {\n//       //   return false;\n//       // } \n//       // return item.name.toLowerCase().search(this.state.search) !== -1;\n//       const nameMatch = item.name.toLowerCase().includes(this.state.search);\n//       const typeMatch = this.state.type === \"all\" || item.type === this.state.type;\n//       return nameMatch && typeMatch;\n//   }\n\n//   render(){\n//     return (\n//         <div className = \"filter-list\">\n\n//           <DropdownButton id=\"typeDropdown\" title={\"Type\"}>\n//             <MenuItem eventKey=\"all\" onSelect={this.onFilter}>All</MenuItem>\n//             <MenuItem eventKey=\"fruit\" onSelect={this.onFilter}>Fruit</MenuItem>\n//             <MenuItem eventKey=\"vegetable\" onSelect={this.onFilter}>Vegetables</MenuItem>\n//           </DropdownButton>\n\n//           <input type = \"text\" placeholder = \"Search\" onChange = {this.onSearch} />\n//           <List items = {this.props.items.filter(this.filterItem)} />\n//         </div>\n//     );\n//   }\n// }\n\n// export default FilteredList;\n\nimport React, { Component } from 'react';\nimport { Dropdown, DropdownButton } from 'react-bootstrap';\nimport List from './List';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass FilteredList extends Component {\n  constructor(props) {\n    super(props);\n    this.onSearch = event => {\n      this.setState({\n        search: event.target.value.trim().toLowerCase()\n      });\n    };\n    this.handleSelect = (eventKey, event) => {\n      this.setState({\n        type: eventKey\n      });\n    };\n    this.filterItem = item => {\n      const nameMatch = item.name.toLowerCase().includes(this.state.search);\n      const typeMatch = this.state.type === \"all\" || item.type === this.state.type;\n      return nameMatch && typeMatch;\n    };\n    this.state = {\n      search: \"\",\n      type: \"all\"\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Produce Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n        id: \"typeDropdown\",\n        title: \"Type\",\n        onSelect: this.handleSelect,\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          eventKey: \"all\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          eventKey: \"fruit\",\n          children: \"Fruit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          eventKey: \"vegetable\",\n          children: \"Vegetable\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search\",\n        onChange: this.onSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        items: this.props.items.filter(this.filterItem)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default FilteredList;","map":{"version":3,"names":["React","Component","Dropdown","DropdownButton","List","jsxDEV","_jsxDEV","FilteredList","constructor","props","onSearch","event","setState","search","target","value","trim","toLowerCase","handleSelect","eventKey","type","filterItem","item","nameMatch","name","includes","state","typeMatch","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","title","onSelect","Item","placeholder","onChange","items","filter"],"sources":["C:/Users/bismu/WEB PROGRAMMING HTML/CW06/my-app/src/FilteredList.jsx"],"sourcesContent":["// import React, { Component } from 'react';\n// import {DropdownButton, MenuItem} from 'react-bootstrap';\n// import List from './List';\n\n// class FilteredList extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     //The state is just a list of key/value pairs (like a hashmap)\n//     //TODO (FilteredList): Add an additional state variable within this.state called \"type\" and set it to a default value\n//     this.state = {\n//       search: \"\",\n//       type: \"all\"\n//     };\n//   }\n\n//   //Sets the state whenever the user types on the search bar\n//   onSearch = (event) => {\n//     this.setState({search: event.target.value.trim().toLowerCase()});\n//   }\n\n//   // //TODO (FilteredList): Set the state of the \"type\" state variable depending on what is passed in\n//   // onFilter = (type) => {\n//   //   this.setState({ type });\n//   // }\n//   handleSelect = (eventKey, event) => {\n//     this.setState({ type: eventKey });\n//   }\n\n//   //TODO (FilteredList): Change filterItem to take into account the \"type\" state variable when filtering\n//   filterItem = (item) => {\n//       // if (this.state.type !== \"all\" && item.type.toLowerCase() !== this.state.type) {\n//       //   return false;\n//       // } \n//       // return item.name.toLowerCase().search(this.state.search) !== -1;\n//       const nameMatch = item.name.toLowerCase().includes(this.state.search);\n//       const typeMatch = this.state.type === \"all\" || item.type === this.state.type;\n//       return nameMatch && typeMatch;\n//   }\n\n//   render(){\n//     return (\n//         <div className = \"filter-list\">\n         \n//           <DropdownButton id=\"typeDropdown\" title={\"Type\"}>\n//             <MenuItem eventKey=\"all\" onSelect={this.onFilter}>All</MenuItem>\n//             <MenuItem eventKey=\"fruit\" onSelect={this.onFilter}>Fruit</MenuItem>\n//             <MenuItem eventKey=\"vegetable\" onSelect={this.onFilter}>Vegetables</MenuItem>\n//           </DropdownButton>\n          \n//           <input type = \"text\" placeholder = \"Search\" onChange = {this.onSearch} />\n//           <List items = {this.props.items.filter(this.filterItem)} />\n//         </div>\n//     );\n//   }\n// }\n\n// export default FilteredList;\n\nimport React, { Component } from 'react';\nimport { Dropdown, DropdownButton } from 'react-bootstrap';\nimport List from './List';\n\nclass FilteredList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: \"\",\n      type: \"all\"\n    };\n  }\n\n  onSearch = (event) => {\n    this.setState({ search: event.target.value.trim().toLowerCase() });\n  }\n\n  handleSelect = (eventKey, event) => {\n    this.setState({ type: eventKey });\n  }\n\n  filterItem = (item) => {\n    const nameMatch = item.name.toLowerCase().includes(this.state.search);\n    const typeMatch = this.state.type === \"all\" || item.type === this.state.type;\n    return nameMatch && typeMatch;\n  }\n\n  render() {\n    return (\n      <div className=\"filter-list\">\n        <h1>Produce Search</h1>\n        <DropdownButton id=\"typeDropdown\" title={\"Type\"} onSelect={this.handleSelect}>\n          <Dropdown.Item eventKey=\"all\">All</Dropdown.Item>\n          <Dropdown.Item eventKey=\"fruit\">Fruit</Dropdown.Item>\n          <Dropdown.Item eventKey=\"vegetable\">Vegetable</Dropdown.Item>\n        </DropdownButton>\n        <input type=\"text\" placeholder=\"Search\" onChange={this.onSearch} />\n        <List items={this.props.items.filter(this.filterItem)} />\n      </div>\n    );\n  }\n}\n\nexport default FilteredList;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}