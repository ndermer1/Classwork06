{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bismu\\\\WEB PROGRAMMING HTML\\\\CW06\\\\my-app\\\\src\\\\FilteredList.jsx\";\nimport React, { Component } from 'react';\nimport { DropdownButton, MenuItem } from 'react-bootstrap';\nimport List from './List';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass FilteredList extends Component {\n  constructor(props) {\n    super(props);\n\n    //The state is just a list of key/value pairs (like a hashmap)\n    //TODO (FilteredList): Add an additional state variable within this.state called \"type\" and set it to a default value\n    //Sets the state whenever the user types on the search bar\n    this.onSearch = event => {\n      this.setState({\n        search: event.target.value.trim().toLowerCase()\n      });\n    };\n    // //TODO (FilteredList): Set the state of the \"type\" state variable depending on what is passed in\n    // onFilter = (type) => {\n    //   this.setState({ type });\n    // }\n    this.handleSelect = (eventKey, event) => {\n      this.setState({\n        type: eventKey\n      });\n    };\n    //TODO (FilteredList): Change filterItem to take into account the \"type\" state variable when filtering\n    this.filterItem = item => {\n      // if (this.state.type !== \"all\" && item.type.toLowerCase() !== this.state.type) {\n      //   return false;\n      // } \n      // return item.name.toLowerCase().search(this.state.search) !== -1;\n      const nameMatch = item.name.toLowerCase().includes(this.state.search);\n      const typeMatch = this.state.type === \"all\" || item.type === this.state.type;\n      return nameMatch && typeMatch;\n    };\n    this.state = {\n      search: \"\",\n      type: \"all\"\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-list\",\n      children: [/*#__PURE__*/_jsxDEV(DropdownButton, {\n        id: \"typeDropdown\",\n        title: \"Type\",\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          eventKey: \"all\",\n          onSelect: this.onFilter,\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          eventKey: \"fruit\",\n          onSelect: this.onFilter,\n          children: \"Fruit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          eventKey: \"vegetable\",\n          onSelect: this.onFilter,\n          children: \"Vegetables\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search\",\n        onChange: this.onSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        items: this.props.items.filter(this.filterItem)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this);\n  }\n}\nexport default FilteredList;","map":{"version":3,"names":["React","Component","DropdownButton","MenuItem","List","jsxDEV","_jsxDEV","FilteredList","constructor","props","onSearch","event","setState","search","target","value","trim","toLowerCase","handleSelect","eventKey","type","filterItem","item","nameMatch","name","includes","state","typeMatch","render","className","children","id","title","onSelect","onFilter","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","items","filter"],"sources":["C:/Users/bismu/WEB PROGRAMMING HTML/CW06/my-app/src/FilteredList.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport {DropdownButton, MenuItem} from 'react-bootstrap';\nimport List from './List';\n\nclass FilteredList extends Component {\n  constructor(props) {\n    super(props);\n\n    //The state is just a list of key/value pairs (like a hashmap)\n    //TODO (FilteredList): Add an additional state variable within this.state called \"type\" and set it to a default value\n    this.state = {\n      search: \"\",\n      type: \"all\"\n    };\n  }\n\n  //Sets the state whenever the user types on the search bar\n  onSearch = (event) => {\n    this.setState({search: event.target.value.trim().toLowerCase()});\n  }\n\n  // //TODO (FilteredList): Set the state of the \"type\" state variable depending on what is passed in\n  // onFilter = (type) => {\n  //   this.setState({ type });\n  // }\n  handleSelect = (eventKey, event) => {\n    this.setState({ type: eventKey });\n  }\n\n  //TODO (FilteredList): Change filterItem to take into account the \"type\" state variable when filtering\n  filterItem = (item) => {\n      // if (this.state.type !== \"all\" && item.type.toLowerCase() !== this.state.type) {\n      //   return false;\n      // } \n      // return item.name.toLowerCase().search(this.state.search) !== -1;\n      const nameMatch = item.name.toLowerCase().includes(this.state.search);\n      const typeMatch = this.state.type === \"all\" || item.type === this.state.type;\n      return nameMatch && typeMatch;\n  }\n\n  render(){\n    return (\n        <div className = \"filter-list\">\n         \n          <DropdownButton id=\"typeDropdown\" title={\"Type\"}>\n            <MenuItem eventKey=\"all\" onSelect={this.onFilter}>All</MenuItem>\n            <MenuItem eventKey=\"fruit\" onSelect={this.onFilter}>Fruit</MenuItem>\n            <MenuItem eventKey=\"vegetable\" onSelect={this.onFilter}>Vegetables</MenuItem>\n          </DropdownButton>\n          \n          <input type = \"text\" placeholder = \"Search\" onChange = {this.onSearch} />\n          <List items = {this.props.items.filter(this.filterItem)} />\n        </div>\n    );\n  }\n}\n\nexport default FilteredList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}