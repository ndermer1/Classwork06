{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bismu\\\\WEB PROGRAMMING HTML\\\\CW06\\\\my-app\\\\src\\\\FilteredList.jsx\";\nimport React, { Component } from 'react';\nimport { Dropdown, DropdownButton } from 'react-bootstrap';\nimport List from './List';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass FilteredList extends Component {\n  constructor(props) {\n    super(props);\n\n    //The state is just a list of key/value pairs (like a hashmap)\n    //TODO (FilteredList): Add an additional state variable within this.state called \"type\" and set it to a default value\n    //Sets the state whenever the user types on the search bar\n    this.onSearch = event => {\n      this.setState({\n        search: event.target.value.trim().toLowerCase()\n      });\n    };\n    //TODO (FilteredList): Set the state of the \"type\" state variable depending on what is passed in\n    this.onFilter = type => {\n      this.setState({\n        type\n      });\n    };\n    //TODO (FilteredList): Change filterItem to take into account the \"type\" state variable when filtering\n    this.filterItem = item => {\n      if (this.state.type !== \"all\" && item.type.toLowerCase() !== this.state.type) {\n        return false;\n      }\n      return item.name.toLowerCase().search(this.state.search) !== -1;\n    };\n    this.onFilter = (eventKey, event) => {\n      this.setState({\n        type: eventKey\n      });\n    };\n    this.state = {\n      search: \"\",\n      type: \"all\"\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-list\",\n      children: [/*#__PURE__*/_jsxDEV(DropdownButton, {\n        id: \"typeDropdown\",\n        title: \"Type\",\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          eventKey: \"all\",\n          onSelect: this.onFilter,\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          eventKey: \"fruit\",\n          onSelect: this.onFilter,\n          children: \"Fruit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          eventKey: \"vegetable\",\n          onSelect: this.onFilter,\n          children: \"Vegetables\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search\",\n        onChange: this.onSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        items: this.props.items.filter(this.filterItem)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this);\n  }\n}\nexport default FilteredList;","map":{"version":3,"names":["React","Component","Dropdown","DropdownButton","List","jsxDEV","_jsxDEV","FilteredList","constructor","props","onSearch","event","setState","search","target","value","trim","toLowerCase","onFilter","type","filterItem","item","state","name","eventKey","render","className","children","id","title","Item","onSelect","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","items","filter"],"sources":["C:/Users/bismu/WEB PROGRAMMING HTML/CW06/my-app/src/FilteredList.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { Dropdown, DropdownButton } from 'react-bootstrap';\nimport List from './List';\n\nclass FilteredList extends Component {\n  constructor(props) {\n    super(props);\n\n    //The state is just a list of key/value pairs (like a hashmap)\n    //TODO (FilteredList): Add an additional state variable within this.state called \"type\" and set it to a default value\n    this.state = {\n      search: \"\",\n      type: \"all\"\n    };\n  }\n\n  //Sets the state whenever the user types on the search bar\n  onSearch = (event) => {\n    this.setState({search: event.target.value.trim().toLowerCase()});\n  }\n\n  //TODO (FilteredList): Set the state of the \"type\" state variable depending on what is passed in\n  onFilter = (type) => {\n    this.setState({ type });\n  }\n\n  //TODO (FilteredList): Change filterItem to take into account the \"type\" state variable when filtering\n  filterItem = (item) => {\n      if (this.state.type !== \"all\" && item.type.toLowerCase() !== this.state.type) {\n        return false;\n      } \n      return item.name.toLowerCase().search(this.state.search) !== -1;\n  }\n\n  onFilter = (eventKey, event) => {\n    this.setState({ type: eventKey });\n  }\n\n  render(){\n    return (\n        <div className = \"filter-list\">\n         \n          <DropdownButton id=\"typeDropdown\" title={\"Type\"}>\n            <Dropdown.Item eventKey=\"all\" onSelect={this.onFilter}>All</Dropdown.Item>\n            <Dropdown.Item eventKey=\"fruit\" onSelect={this.onFilter}>Fruit</Dropdown.Item>\n            <Dropdown.Item eventKey=\"vegetable\" onSelect={this.onFilter}>Vegetables</Dropdown.Item>\n          </DropdownButton>\n          \n          <input type = \"text\" placeholder = \"Search\" onChange = {this.onSearch} />\n          <List items = {this.props.items.filter(this.filterItem)} />\n        </div>\n    );\n  }\n}\n\nexport default FilteredList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}